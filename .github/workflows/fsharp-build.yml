# SPDX-FileCopyrightText: Copyright (C) 2025 FabrÃ­cio Barros Cabral
# SPDX-License-Identifier: MIT
---
name: fsharp-build
'on':
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - master
defaults:
  run:
    shell: bash -xeuo pipefail {0}
permissions:
  contents: read
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
concurrency:
  # yamllint disable-line rule:line-length
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  checkcode:
    runs-on: ubuntu-24.04
    outputs:
      proceed: ${{ steps.check.outputs.proceed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Check for code
        id: check
        # yamllint disable rule:line-length
        run: |
          found=$(find . -maxdepth 1 -name "*.csproj" -o -name "*.sln")
          if [ -z "${found}" ]; then
            echo "No code found to proceed. Stopping execution of the other jobs."
            echo "proceed=false" >> "${GITHUB_OUTPUT}"
          else
            echo "proceed=true" >> "${GITHUB_OUTPUT}"
          fi
        # yamllint enable rule:line-length
  fsharp-build:
    runs-on: ${{ matrix.os }}
    needs: checkcode
    if: needs.checkcode.outputs.proceed == 'true'
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14, macos-15, windows-2025]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            6.x
            7.x
            8.x
            9.x
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
