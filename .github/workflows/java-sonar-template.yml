# SPDX-FileCopyrightText: Copyright (C) 2025 FabrÃ­cio Barros Cabral
# SPDX-License-Identifier: MIT
---
name: java-sonar-template
'on':
  workflow_call:
    secrets:
      GH_TOKEN:
        description: 'GitHub Token'
        required: true
      SN_TOKEN:
        description: 'Sonar Token'
        required: true
defaults:
  run:
    shell: bash -xeuo pipefail {0}
permissions:
  contents: read
jobs:
  checkcode:
    runs-on: ubuntu-24.04
    outputs:
      proceed: ${{ steps.check.outputs.proceed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Check for code
        id: check
        run: |
          found=$(find . -maxdepth 1 -name "pom.xml")
          if [[ -n "${found}" ]]; then
            echo "proceed=true" >> "${GITHUB_OUTPUT}"
          else
            echo "Code not found. Stopping execution of the other jobs."
            echo "proceed=false" >> "${GITHUB_OUTPUT}"
          fi
  java-sonar-template:
    runs-on: ubuntu-24.04
    needs: checkcode
    if: needs.checkcode.outputs.proceed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Setup Java SDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Configure Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ubuntu-jdk-11-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ubuntu-jdk-11-maven-
      - name: Configure Sonar cache
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Run Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SN_TOKEN }}
        run: |
          [[ -x "mvnw" ]] && mvn="./mvnw" || mvn="mvn"
          args=(--errors --batch-mode verify -Dinvoker.skip)
          profile=$(grep -q "<id>jacoco</id>" pom.xml && echo "-Pjacoco")
          [[ -n "${profile}" ]] && args+=("${profile}")
          profile=$(grep -q "<id>sonar</id>" pom.xml && echo "-Psonar")
          [[ -n "${profile}" ]] && {
            args+=("${profile}");
            args+=(-Dsonar.qualitygate.wait=true);
          }
          ${mvn} "${args[@]}"
