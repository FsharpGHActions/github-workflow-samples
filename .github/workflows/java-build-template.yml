# SPDX-FileCopyrightText: Copyright (C) 2025 FabrÃ­cio Barros Cabral
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: java-build-template
'on':
  workflow_call:
defaults:
  run:
    shell: bash -xeuo pipefail {0}
permissions:
  contents: read
jobs:
  java-linux-build-template:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        java: [17, 21]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Check if code exists
        id: check
        uses: thebinaryfelix/check-file-existence-action@436223737a098725b8d10ab1950a03efba5e6fc6
        with:
          files: '**/pom.xml'
      - name: Prepare APT cache folder
        if: steps.check.outputs.exists == 'true'
        id: apt
        run: |
          if [[ -s apt-packages.txt ]]; then
            mkdir -p ./apt-cache
            echo "caching=true" >> "${GITHUB_OUTPUT}"
          else
            echo "caching=false" >> "${GITHUB_OUTPUT}"
          fi
      - name: Configure APT cache
        if: steps.apt.outputs.caching == 'true'
        uses: actions/cache@v4
        with:
          path: ./apt-cache
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-packages.txt') }}
          restore-keys: ${{ runner.os }}-apt-
      - name: Install dependencies
        if: steps.apt.outputs.caching == 'true'
        run: |
          sudo apt-get update
          xargs sudo apt-get --download-only -o dir::cache=./apt-cache install \
            -y --no-install-recommends < apt-packages.txt
      - name: Setup Java SDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Configure Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-
      - name: Build Maven project
        run: |
          [[ -x "mvnw" ]] && mvn="./mvnw" || mvn="mvn"
          args=(--errors --batch-mode install)
          profile=$(grep -q "<id>qulice</id>" pom.xml && echo "-Pqulice")
          [[ -n "${profile}" ]] && args+=("${profile}")
          ${mvn} "${args[@]}"
  java-macos-build-template:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, macos-15]
        java: [17, 21]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Check if code exists
        id: check
        uses: thebinaryfelix/check-file-existence-action@436223737a098725b8d10ab1950a03efba5e6fc6
        with:
          files: '**/pom.xml'
      - name: Configure Homebrew cache
        if: steps.check.outputs.exists == 'true'
        uses: actions/cache@v4
        with:
          path: /Users/runner/Library/Caches/Homebrew
          key: brew-cache-${{ runner.os }}-${{ hashFiles('**/Brewfile') }}
          restore-keys: brew-cache-${{ runner.os }}-
      - name: Install dependencies
        run: |
          if [[ -s brew-packages.txt ]]; then
            brew update
            xargs brew install < brew-packages.txt
          fi
      - name: Setup Java SDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Configure Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-${{ github.job }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-${{ github.job }}-
      - name: Build Maven project
        run: |
          [[ -x "mvnw" ]] && mvn="./mvnw" || mvn="mvn"
          args=(--errors --batch-mode install)
          profile=$(grep -q "<id>qulice</id>" pom.xml && echo "-Pqulice")
          [[ -n "${profile}" ]] && args+=("${profile}")
          ${mvn} "${args[@]}"
  java-windows-build-template:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022, windows-2025]
        java: [17, 21]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Check if code exists
        id: check
        uses: thebinaryfelix/check-file-existence-action@436223737a098725b8d10ab1950a03efba5e6fc6
        with:
          files: '**/pom.xml'
      - name: Configure Chocolatey cache
        if: steps.check.outputs.exists == 'true'
        uses: actions/cache@v4
        with:
          path: |
            C:\ProgramData\chocolatey\cache
            C:\ProgramData\chocolatey\lib
          key: choco-cache-${{ runner.os }}-${{ hashFiles('**/packages.config') }}
          restore-keys: choco-cache-${{ runner.os }}-
      - name: Install dependencies
        shell: cmd
        run: |
          @echo off
          setlocal enabledelayedexpansion
          if exist "choco-packages.txt" (
            for /f "usebackq delims=" %%P in ("choco-packages.txt") do (
              choco install %%P -y --ignore-checksums
            )
          )
      - name: Setup Java SDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Configure Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-${{ github.job }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-${{ github.job }}-
      - name: Build Maven project
        shell: cmd
        run: |
          @echo off
          for /f "delims=" %%i in ('findstr "<id>qulice</id>" pom.xml') do set "Q=1"
          if exist "mvnw.cmd" (set "M=mvnw.cmd") else (set "M=mvn")
          %M% --errors --batch-mode install %Q:~-2,-1%-Pqulice
