# SPDX-FileCopyrightText: Copyright (C) 2025 Fabr√≠cio Barros Cabral
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: java-central-release-template
'on':
  workflow_call:
    secrets:
      RELEASE_KEYNAME:
        description: 'GPG key name'
        required: true
      RELEASE_PASSPHRASE:
        description: 'GPG passphrase'
        required: true
      RELEASE_USERNAME:
        description: 'Central token username'
        required: true
      RELEASE_PASSWORD:
        description: 'Central token password'
        required: true
defaults:
  run:
    shell: bash -xeuo pipefail {0}
permissions:
  actions: read
  security-events: write
  contents: read
jobs:
  java-central-release-template:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Check if code exists
        id: check
        uses: thebinaryfelix/check-file-existence-action@436223737a098725b8d10ab1950a03efba5e6fc6
        with:
          files: '**/pom.xml'
      - name: Configure APT cache
        if: steps.check.outputs.exists == 'true'
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-packages.txt') }}
          restore-keys: ${{ runner.os }}-apt-
      - name: Install dependencies
        run: |
          if [[ -s apt-packages.txt ]]; then
            sudo apt-get update
            xargs sudo apt-get install -y \
              --no-install-recommends < apt-packages.txt
          fi
      - name: Setup Java SDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Configure Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-17-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-17-maven-
      - name: Setup Maven settings.xml
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.RELEASE_PASSPHRASE }}
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>central</id>
                <username>${{ secrets.RELEASE_USERNAME }}</username>
                <password>${{ secrets.RELEASE_PASSWORD }}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>gpg</id>
                <properties>
                  <gpg.keyname>${{ secrets.RELEASE_KEYNAME }}</gpg.keyname>
                </properties>
              </profile>
            </profiles>
          </settings>
          EOF
      - name: Release to Maven Central
        run: |
          [[ -x "mvnw" ]] && mvn="./mvnw" || mvn="mvn"
          args=(--errors --batch-mode deploy -Pcentral -Pgpg -DskipTests=true)
          profile=$(grep -q "<id>qulice</id>" pom.xml && echo "-Pqulice")
          [[ -n "${profile}" ]] && args+=("${profile}")
          ${mvn} "${args[@]}"
        env:
          GPG_TTY: $(tty)
          JDK_JAVA_OPTIONS: >
            --add-opens java.base/java.lang=ALL-UNNAMED
            --add-opens java.base/java.io=ALL-UNNAMED
            --add-opens java.base/java.util=ALL-UNNAMED
            --add-opens java.base/java.util.concurrent=ALL-UNNAMED
