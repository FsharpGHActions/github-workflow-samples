# SPDX-FileCopyrightText: Copyright (C) 2025 Fabr√≠cio Barros Cabral
# SPDX-License-Identifier: MIT
---
name: java-build
'on':
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
permissions:
  contents: read
jobs:
  java-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022]
        java: [11, 17, 21]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install Maven in Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y maven
      - name: Setup Java SDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Configure Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          # yamllint disable-line rule:line-length
          key: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-
      - name: Build project in Unix/macOS
        if: runner.os != 'Windows'
        run: |
          # Secure shell command execution
          set -euo pipefail

          # Choose maven embedded or system
          [ -x "mvnw" ] && MVN="./mvnw" || MVN="mvn"

          # If exist qulice profile, execute using it
          PROFILE=$(grep -q "<id>qulice</id>" pom.xml && echo "-Pqulice" || echo "")
          $MVN --errors --batch-mode clean install $PROFILE
      - name: Build project in Windows
        if: runner.os == 'Windows'
        run: |
          @echo off
          for /f "delims=" %%i in ('findstr "<id>qulice</id>" pom.xml') do set "Q=1"
          if exist "mvnw.cmd" (set "M=mvnw.cmd") else (set "M=mvn")
          %M% --errors --batch-mode clean install %Q:~-2,-1%-Pqulice
        shell: cmd
